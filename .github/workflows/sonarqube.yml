# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: SonarQube Analysis

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - develop
  pull_request:
    branches: [ '*' ]
    types: [opened, synchronize, reopened]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  check_run:
    types: [ rerequested, completed ]
  branch_protection_rule:
    types: [ created, deleted ]
  check_suite:
    types: [ completed ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: DockerMySQLPassword
          MYSQL_DATABASE: portfolio
          MYSQL_USER: DockerMySQLUsername
          MYSQL_PASSWORD: DockerMySQLPassword
        ports:
          - "3306:3306"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.qualitygate.wait=true -Dsonar.projectKey=egorKazit_portfolio -Dsonar.scm.provider=git -Dsonar.java.binaries=/tmp
