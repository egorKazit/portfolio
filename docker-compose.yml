version: '3.3'

services:
  #service 1: definition of mysql database
  mysql:
    image: mysql:latest
    container_name: mysql
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=DockerMySQLPassword
      - MYSQL_USER=DockerMySQLUsername
      - MYSQL_PASSWORD=DockerMySQLPassword
      - MYSQL_DATABASE=portfolio
    command: mysqld --sql_mode="NO_ENGINE_SUBSTITUTION" --default-authentication-plugin=mysql_native_password
    expose:
      - 3306
    ports:
      - "127.0.0.1:33061:3306"
    #      - "10.8.0.1:33061:3306"
    restart: always
    networks:
      - portfolio_bridge

  #service 2: definition of zookeeper
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - '127.0.0.1:2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/var/lib/zookeeper
    networks:
      - portfolio_bridge

  #service 3: definition of kafka broker
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: broker
    ports:
      - '127.0.0.1:9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      #      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://broker:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/var/lib/kafka
    networks:
      - portfolio_bridge

networks:
  portfolio_bridge:
    driver: bridge

volumes:
  mysql_data:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local